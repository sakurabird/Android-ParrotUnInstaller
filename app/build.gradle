buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def VERSION_CODE = 9
def VERSION_NAME = "1.8"
def PACKAGE_NAME = "sakurafish.com.parrot.uninstaller"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion compile_sdk_version as int
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version as int
        targetSdkVersion target_sdk_version as int
        versionCode VERSION_CODE
        versionName VERSION_NAME
        applicationId PACKAGE_NAME
        manifestPlaceholders = [appName: "@string/app_name"]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            storeFile file("../debug.keystore")
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            manifestPlaceholders = [appName: "@string/app_name_staging"]
        }
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
            res.srcDirs = ['src/main/res']
        }
    }
    dexOptions {
        preDexLibraries = false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:support-v4:${support_lib_version}"
    compile "com.android.support:appcompat-v7:${support_lib_version}"
    compile "com.android.support:support-annotations:${support_lib_version}"
    compile "com.google.android.gms:play-services-analytics:${googleplay_services_version}"
    compile "com.google.firebase:firebase-ads:${googleplay_services_version}"
    compile files('libs/greendao-1.3.7.jar')
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.facebook.stetho:stetho:1.2.0'
    compile 'fr.avianey.com.viewpagerindicator:library:2.4.1.1@aar'
}

apply plugin: 'com.google.gms.google-services'